# Copyright 2022-2023 Universität Tübingen, DKFZ and EMBL
# for the German Human Genome-Phenome Archive (GHGA)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: PyPI Package
description: Tasks that are executed in GHGA PyPI packaging pipeline

inputs:
  tag:
    description: "The tag used to publish to the registry."
    required: true
  working_directory:
    description: "Directory which contains Dockerfile and project configuration files. It is used for local testing purposes."
    default: "."
  python_version:
    description: "Supported python versions"


runs:
    using: composite

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python_version }}

      - name: Display Python version
        shell: bash
        run: |
          echo PYTHON_VER=$(python --version) >> $GITHUB_ENV

      - if: contains(env.PYTHON_VER, '3.11')
        name: Verify package version vs tag version
        shell: bash
        working-directory: ${{ inputs.working_directory }}
        run: |
          if [ -f "pyproject.toml" ]
          then
            PKG_VER=$(python3.11 -c "import tomllib; print(tomllib.load(open('pyproject.toml', 'rb'))['project']['version'])")
          else
            echo "pyproject.toml were found." >&2; exit 1
          fi

          TAG_VER=${{ inputs.tag }}
          [[ -z "$TAG_VER" ]] && TAG_VER=${{ inputs.tag }}

          echo "Package version is $PKG_VER" >&2
          echo "Tag version is $TAG_VER" >&2
          if [ "$PKG_VER" != "$TAG_VER" ]; then
            echo "Package version and tag name mismatch." >&2
            exit 1
          fi

      - name: Install pypa/build
        shell: bash
        run: >-
          python -m
          pip install
          build
          --user

      - name: Build a binary wheel and a source tarball
        shell: bash
        working-directory: ${{ inputs.working_directory }}
        run: >-
          python -m
          build
          --sdist
          --wheel
          --outdir dist/
          .

      - name: Install the newly build package with all extras
        shell: bash
        working-directory: ${{ inputs.working_directory }}
        run: |
          TAR_PATH="$( realpath ./dist/*.tar.gz)"
          python -m \
            pip install \
            "${TAR_PATH}[all]"

      - name: Install testing requirements
        shell: bash
        working-directory: ${{ inputs.working_directory }}
        run: >-
          python -m
          pip install
          -r ./lock/requirements-dev.txt

      - name: Run pytest on freshly installed package
        shell: bash
        run: |
          pytest .
